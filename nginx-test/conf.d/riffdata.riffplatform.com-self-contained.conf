map $http_upgrade $connection_upgrade
{
    default upgrade;
    '' close;
}

server
{
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name riffplatform.com www.riffplatform.com;

    location /
    {
        return 302 https://$host$request_uri;
    }
}

server
{
    # SSL configuration

    listen 443 ssl default_server;
    listen [::]:443 ssl default_server;
    include snippets/site_ssl_cert.conf;
    include snippets/ssl_params.conf;

    include snippets/gzip_params.conf;


    location /
    {
        root /usr/share/nginx/html;
    }

    location = /healthcheck
    {
        add_header 'Access-Control-Allow-Origin' '*';
        default_type application/json;
        return 200 '{\n  "site": "$host",\n  "status": "up"\n}';
    }

#    location /api/videodata
#    {
#        # proxy_params
#        proxy_redirect     off;
#        proxy_set_header   X-Real-IP          $remote_addr;
#        proxy_set_header   X-Forwarded-For    $proxy_add_x_forwarded_for;
#        proxy_set_header   X-Forwarded-Proto  $scheme;
#        proxy_set_header   Host               $http_host;
#        proxy_set_header   X-NginX-Proxy      true;
#        proxy_set_header   Connection         "";
#        proxy_http_version 1.1;
#
#        proxy_pass http://172.31.6.19:3000;
#    }

# See these references on how to supply a path so we can reverse proxy
# multiple upstream websocket connections since they can't all use /socket.io
# https://stackoverflow.com/questions/25896225/how-do-i-get-socket-io-running-for-a-subdirectory
# https://serverfault.com/questions/645643/using-nginx-to-proxy-multiple-instances-of-sockets-io
    location /api/videodata/socket.io/
    {
        proxy_pass http://172.31.6.19:3000/socket.io/;

        # proxy_websocket_params
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_cache_bypass $http_upgrade;

        # cors_params
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
    }
}
